#!/usr/bin/env bash
if command -v realpath >/dev/null 2>&1; then
    SCRIPTS="$(dirname $(realpath "${BASH_SOURCE[0]}" 2>/dev/null))"
elif command -v readlink >/dev/null 2>&1 \
    && readlink --canonicalize-existing ~ >/dev/null 2>&1; then
    SCRIPTS="$(dirname $(readlink --canonicalize-existing ${BASH_SOURCE[0]}))"
else
    SCRIPTS=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd -P)
    if [ "$SCRIPTS" == "${HOME}" ]; then echo "Where am I"; exit 1; fi
fi
DOT="$(cd $SCRIPTS/..; pwd -P)"
pathadd() { [[ ":$PATH:" != *":$1:"* ]] && export PATH="${PATH:+"$PATH:"}$1"; }
pathaddfirst() { [[ ":$PATH:" != *":$1:"* ]] && export PATH="$1${PATH:+":$PATH"}"; }

pathaddfirst $(cd $SCRIPTS/../bin; pwd -P)
pathaddfirst /usr/local/bin
pathadd /usr/texbin
pathadd /usr/bin

export EDITOR=`which vim`; export VISUAL=$EDITOR
export MAILDIR=~/.mail
export KHARD_CONFIG=~/.khard
export LOCALDOT=~/.local-dot
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export ACCOUNTS=$LOCALDOT/accounts
export TMUX_SOCKET=~/.local-dot/status/tmux-global
export NOTEDIR=~/documents/notes
echo "UPDATESTARTUPTTY" | gpg-connect-agent > /dev/null 2>&1
export GPG_TTY=`tty`
export HOMEBREW_NO_AUTO_UPDATE=1
export HOMEBREW_NO_ANALYTICS=1
listsadd() { [[ ":$LISTS:" != *":$1:"* ]] && export LISTS="${LISTS:+"$LISTS:"}$1"; }
listsadd ~/documents/notes/todo.md
alias khal="khal -c ~/.khal"
todo() { build list "$@"; }

SHORT_BASH_IMPORT="$LOCALDOT/conf/short.bash"
[ -f "$SHORT_BASH_IMPORT" ] && . "$SHORT_BASH_IMPORT"

if [ "$1" == "--short" ]; then return 0; fi


alias today="status today -l 20";
alias muttr="status mail"

alias gh="build github";
alias gt="build gitolite"
alias gs="git status";
alias gd="git diff"
alias gc="git commit";
alias gl='build git pretty-log'
alias gr="git rebase"

alias s="build search content";
alias f="build search file"

alias ssh-share="build ssh share"
alias sup="build vagrant sup";

alias dc="cd";
alias ls="ls -1F"

alias refresh=". ~/.bash_profile"

alias n="cd $NOTEDIR && vim scratch.md"
alias vess="vim -R -";

ssh-add ~/.ssh/*_rsa > /dev/null 2>&1
command -v launchctl >/dev/null 2>&1 && launchctl unload -w /System/Library/LaunchAgents/com.apple.rcd.plist  > /dev/null 2>&1
command -v brew >/dev/null 2>&1 && source `brew --prefix`/etc/bash_completion

# Git...
git config --global user.name "Taylor L Money"
git config --global core.excludesfile "$SCRIPTS/gitignore"
git config --global color.ui true
if [ "`git version | cut -d. -f1 | cut '-d ' -f3`" == "1" ]; then
    git config --global push.default matching
else
    git config --global push.default simple
fi

# Pretty
check_start() { command_timer=${command_timer:-$(date +%s)}; }
check_end() { [[ $(($(date +%s) - $command_timer)) -ge 10 ]] && tput bel; unset command_timer; }
trap 'check_start' DEBUG;
if [ ! -f $LOCALDOT/status/home.me ]; then COMPNAME="\e[31m@$(hostname | cut -c 1-10)\e[0m"; fi
current_path() { pwd | sed 's:^'${HOME}':~:'; }; get_current_path() { current_path; }
get_jobs() { [ "$(jobs | wc -l | grep -v '^ *0$')" ] && echo '&'; }
export PS1="\[\033[36m\]\u\[\033[m\]$COMPNAME:\[\033[33;1m\]\$(get_current_path)\[\033[m\]\$(build virtualenv prompt-str)\[\e[1;35m\]\$(build git state)\[\e[0;39m\]\$(check_end)
\$(get_jobs)$ "
export CLICOLOR=1: export LSCOLORS=ExFxBxDxCxegedabagacad
. build --completion
commandadd() { grep "$1" <<< "$PROMPT_COMMAND" >/dev/null || PROMPT_COMMAND="$1; $PROMPT_COMMAND"; }
commandadd ". build virtualenv auto-activate"
commandadd "check_end"

ssh-setup() {
    ssh-share $1;
    ssh $1 "mkdir -p $DOT";
    scp -r $SCRIPTS/../* $1:$DOT;
    ssh $1 "
        echo '. "$DOT"/conf/bashrc'>>.bash_profile;
        echo 'source "$DOT"/conf/vimrc'>>.vimrc;
        echo 'source-file "$DOT"/conf/tmux'>>.tmux.conf;
    ";
}

# tmux
# export TERM="xterm-256color";
alias tmux='tmux -2'; HISTCONTROL=ignoreboth;
if command -v tmux>/dev/null && \
   [ -f $LOCALDOT/status/home.me ] && \
   [[ ! $TERM =~ screen ]] && \
   [ -z "$TMUX" ] && \
   [ "$USER" != "root" ]; then
       tmux -S "$TMUX_SOCKET" has-session \
       && exec tmux -S "$TMUX_SOCKET" attach \
       || (command -v exec_new_tmux > /dev/null 2>&1 \
       && exec_new_tmux "$TMUX_SOCKET" \
       || exec tmux -S "$TMUX_SOCKET" new -s Global)
fi

for f in $LOCALDOT/conf/*.bash; do [ -f "$f" ] && [ "$f" != "$SHORT_BASH_IMPORT" ] && . "$f"; done
