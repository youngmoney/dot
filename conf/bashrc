#!/usr/bin/env bash
[ -n "${ZSH_VERSION}" ] && bash && exit
pathadd() { [[ ":${PATH}:" != *":$1:"* ]] && export PATH="${PATH:+"${PATH}:"}$1"; }
pathaddfirst() { [[ ":${PATH}:" != *":$1:"* ]] && export PATH="$1${PATH:+":${PATH}"}"; }


pathaddfirst /usr/local/bin
pathadd /usr/texbin
pathadd /usr/bin
[ -e /opt/homebrew/bin/brew ] && eval "$(/opt/homebrew/bin/brew shellenv)"

function plugin_arch() {
    local P_OS=$(uname | awk '{print tolower($0)}')
    local P_ARCH=$(arch)
    if [[ $(uname -a | grep amd64 | wc -l ) > 0 ]]; then
       P_ARCH=amd64
    fi
    echo "-${P_OS}-${P_ARCH}"
}

export PLUGIN_REMOVE_SUFFIX=$(plugin_arch)

. ~/.plugin/plugin init

export EDITOR=$(which vim); export VISUAL=${EDITOR}
export LOCALDOT=~/.local-dot
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export TMUX_SOCKET=~/.local-dot/status/tmux-global
export NOTEDIR=~/documents/notes
[ -d "${NOTEDIR}" ] || NOTEDIR=~/Documents/notes
export HOMEBREW_NO_AUTO_UPDATE=1
export HOMEBREW_NO_ANALYTICS=1
export BASH_SILENCE_DEPRECATION_WARNING=1
export GOPATH=~/.go
export FORMATTER_CONFIG=~/.space.yaml
export TESTER_CONFIG=~/.space.yaml
export COMMANDER_CONFIG=~/.space.yaml

SHORT_BASH_IMPORT="${LOCALDOT}/conf/short.bash"
[ -f "${SHORT_BASH_IMPORT}" ] && . "${SHORT_BASH_IMPORT}"

if [ "$1" == "--short" ]; then return 0; fi

if [ ! -d . ]; then
    cd . 2>/dev/null
    if [ ! -d . ]; then
        echo "leaving non-existent directory: $(pwd)"
        cd ~ || exit
    fi
fi

alias gh="build github";
alias gs="git status";
alias gd="git diff --color-words=."
alias gc="git commit";
alias gl='git helper pretty-log'
alias gr="git rebase"

alias el='change -l local'
alias ed='change -l dot'

alias s="search content";
alias f="search file"

alias ssh-share="build ssh share"

alias dc="cd";
alias ls="ls -1F"

alias refresh=". ~/.bash_profile"

alias note="change -l notes"
alias d="change -l notes"
alias vess="vim -R -";

ssh-add ~/.ssh/*_rsa > /dev/null 2>&1
command -v launchctl >/dev/null 2>&1 && launchctl unload -w /System/Library/LaunchAgents/com.apple.rcd.plist  > /dev/null 2>&1
command -v brew >/dev/null 2>&1 && source $(brew --prefix)/etc/bash_completion

# Pretty
check_date() {
    date +"%Y-%m-%d %T (%Z %z)"
}
check_start() {
    export command_timer=${command_timer:-$(date +%s)}
    export command_start=${command_start:-$(check_date)}
}
check_end() {
    local runtime=$(($(date +%s)  - ${command_timer}))
    export command_runtime="from ${command_start} to $(check_date) in ${runtime}s"
    if [[ "${runtime}" -ge 10 ]]; then
        tput bel
    fi
    unset command_timer
    unset command_start
}
if [ ! -f ${LOCALDOT}/status/home.me ]; then COMPNAME="\e[31m@$(hostname | cut -c 1-10)\e[0m"; fi
current_path() { pwd | sed 's:^'"${HOME}"':~:'; }; get_current_path() { build workspace path; }
get_jobs() { [ -n "$(jobs | wc -l | grep -v '^ *0$')" ] && echo '&'; }
command_line_extras() {
    IFS=: read -r -d '' -a extras < <(printf '%s:\0' "${COMMAND_LINE_EXTRAS}")
    prev=""
    for extra in "${extras[@]}"; do
      out=$(${extra})
      if [ "${out}" != "" ]; then
        if [ "${prev}" != "" ]; then
            echo -n " | "
        fi
        prev="${out}"
      fi
      echo -n "${out}"
    done
}
COMMAND_LINE_EXTRAS=""
clextraadd() { [[ ":${COMMAND_LINE_EXTRAS}:" != *":$1:"* ]] && export COMMAND_LINE_EXTRAS="${COMMAND_LINE_EXTRAS:+"${COMMAND_LINE_EXTRAS}:"}$1"; }
export PS1="\[\033[0;90m\]\${command_runtime}
\[\033[36m\]\u\[\033[m\]${COMPNAME}:\[\033[33;1m\]\$(get_current_path)\[\033[m\]\$()\[\e[1;35m\] \$(commander command simple-state)\[\e[0;39m\] \[\e[0;33m\]\$(command_line_extras)\[\e[0;39m\]
\[\033[0;90m\]\$(get_jobs)$\[\033[0;0m\] "
export CLICOLOR=1: export LSCOLORS=ExFxBxDxCxegedabagacad
. build --completion

trap 'check_start' DEBUG
unset PROMPT_COMMAND

shopt -s histappend
export HISTSIZE= HISTFILESIZE=
export HISTFILE=~/.bash_eternal_history

commandadd() { grep "$1" <<< "${PROMPT_COMMAND}" >/dev/null || PROMPT_COMMAND="$1; ${PROMPT_COMMAND}"; }
commandadd "check_end"
commandadd "history -a"
commandadd "refresh"

ssh-setup() {
    ssh-share "$1";
    ssh "$1" "mkdir -p ${DOT}";
    scp -r "${SCRIPTS}"/../* "$1":"${DOT}";
    ssh "$1" "
        echo '. ""${DOT}""/conf/bashrc'>>.bash_profile;
        echo 'source ""${DOT}""/conf/vimrc'>>.vimrc;
        echo 'source-file ""${DOT}""/conf/tmux'>>.tmux.conf;
    ";
}

layout() { eval "$(build workspace layout $@)"; }
change() { eval "$(build workspace change -r $@)"; }
create() { eval "$(build workspace create -r $@)"; }
new() { eval "$(build workspace change -r -c -l $@)"; }
_workspace_completion() {
  COMPREPLY=($(compgen -W "$(build workspace "$1")" -- "${COMP_WORDS[${#COMP_WORDS[@]}-1]}"))
}
_layout_completion() { _workspace_completion layout; }
complete -F _layout_completion layout
_change_completion() { _workspace_completion change; }
complete -F _change_completion change
complete -F _change_completion new
_create_completion() { _workspace_completion create; }
complete -F _create_completion create
_command_completion() {
  COMPREPLY=($(compgen -W "$(commander command)" -- "${COMP_WORDS[${#COMP_WORDS[@]}-1]}"))
}
complete -F _command_completion commander command

# tl() { eval "$(build test test -l $@)"; }
alias tl="tester test -l"

HISTCONTROL=ignoreboth;
# tmux
# export TERM="xterm-256color";
command -v exec_tmux > /dev/null 2>&1 || exec_tmux() { exec tmux -2 "$@"; };
if command -v tmux>/dev/null && \
   [ -f ${LOCALDOT}/status/home.me ] && \
   [[ ! ${TERM} =~ screen ]] && \
   [ -z "${TMUX}" ] && \
   [ "${USER}" != "root" ]; then
       tmux -S "${TMUX_SOCKET}" has-session 2>/dev/null \
       && exec_tmux -S "${TMUX_SOCKET}" attach \
       || exec_tmux -S "${TMUX_SOCKET}" new -s Global
fi

for f in ${LOCALDOT}/conf/*.bash; do [ -f "${f}" ] && [ "${f}" != "${SHORT_BASH_IMPORT}" ] && . "${f}"; done
