#!/usr/bin/env bash

#stolen from https://github.com/mathiasbynens/dotfiles/blob/master/.osx

#sudo nvram SystemAudioVolume=" "
#sudo pmset -a standbydelay 86400
#sudo systemsetup -setcomputersleep Off > /dev/null

osx::name-computer() {
    local computer_name="`sudo scutil --get ComputerName`"
    computer_name="Typewriter"

    # read -p "Computer Name? [$computer_name] " cname
    if [ "$cname" != "" ]; then computer_name="$cname"; fi
    sudo scutil --set ComputerName "$computer_name"
    sudo scutil --set HostName "$computer_name"
    sudo scutil --set LocalHostName "$computer_name"
    sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string "$computer_name"
}

# defaults write com.apple.desktop Background '{default = {ImageFilePath = "~/pictures/roll.iPhone/IMG_5524.JPG"; };}'

sudo pmset -a displaysleep 5 sleep 5
sudo pmset -c displaysleep 15 sleep 20

# Expand save panel by default
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true

# Expand print panel by default
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true

# Save to disk (not to iCloud) by default
defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

# Firewall

sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setglobalstate on
sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setloggingmode on
sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setstealthmode on
sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setallowsigned off
sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setallowsignedapp off
sudo pkill -HUP socketfilterfw

# https://github.com/drduh/macOS-Security-and-Privacy-Guide


# Trackpad: enable tap to click for this user and for the login screen
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1


defaults write NSGlobalDomain KeyRepeat -int 0
defaults write NSGlobalDomain KeyRepeat -int 1
defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false

defaults write com.apple.screensaver askForPassword -int 1
defaults write com.apple.screensaver askForPasswordDelay -int 0

defaults write com.apple.screencapture disable-shadow -bool true
defaults write NSGlobalDomain AppleShowAllExtensions -bool true
defaults write com.apple.finder ShowPathbar -bool true
defaults write com.apple.finder QLEnableTextSelection -bool true
defaults write com.apple.finder _FXShowPosixPathInTitle -bool true
# When performing a search, search the current folder by default
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"
# Disable the warning when changing a file extension
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

# Avoid creating .DS_Store files on network volumes
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true

# Four-letter codes for the other view modes: `icnv`, `Nlsv`, `clmv`, `Flwv`
defaults write com.apple.finder FXPreferredViewStyle -string "clmv"

# Enable AirDrop over Ethernet and on unsupported Macs running Lion
defaults write com.apple.NetworkBrowser BrowseAllInterfaces -bool true

# Set the icon size of Dock items to 36 pixels
defaults write com.apple.dock tilesize -int 36

# Show no indicator lights for open applications in the Dock
defaults write com.apple.dock show-process-indicators -bool false

# Disable Dashboard
defaults write com.apple.dashboard mcx-disabled -bool true
defaults write com.apple.dock dashboard-in-overlay -bool true
# Don’t automatically rearrange Spaces based on most recent use
defaults write com.apple.dock mru-spaces -bool false

# Remove the auto-hiding Dock delay
defaults write com.apple.dock autohide-delay -float 0

# Make Dock icons of hidden applications translucent
defaults write com.apple.dock showhidden -bool false

# Enable Safari’s debug menu
#defaults write com.apple.Safari IncludeInternalDebugMenu -bool true
# Enable the Develop menu and the Web Inspector in Safari
defaults write com.apple.Safari IncludeDevelopMenu -bool true
defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true

# Use plain text mode for new TextEdit documents
defaults write com.apple.TextEdit RichText -int 0

# Safari
defaults write com.apple.Safari HomePage ''
defaults write com.apple.Safari AutoFillCreditCardData 0
defaults write com.apple.Safari AutoFillFromAddressBook 0
defaults write com.apple.Safari AutoFillMiscellaneousForms 0
defaults write com.apple.Safari AutoFillPasswords 0
defaults write com.apple.Safari AlwaysRestoreSessionAtLaunch 1
defaults write com.apple.Safari AutoOpenSafeDownloads 0
defaults write com.apple.Safari HistoryAgeInDaysLimit 14
defaults write com.apple.Safari NewTabBehavior 0
defaults write com.apple.Safari NewWindowBehavior 0
defaults write com.apple.Safari SendDoNotTrackHTTPHeader 1
defaults write com.apple.Safari CanPromptForPushNotifications 0
defaults write com.apple.Safari UserStyleSheetLocationURLString  '~/local/dot/conf/shutup.css'
defaults write com.apple.Safari UserStyleSheetEnabled 1
defaults write com.apple.Safari BlockStoragePolicy 3
defaults write com.apple.Safari SafariGeolocationPermissionPolicy 0

add_app() {
    local app="$@"
    defaults write com.apple.dock persistent-apps -array-add "<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/${app}.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>"
}

defaults write com.apple.dock autohide -bool true
defaults write com.apple.dock tilesize -int 36
defaults write com.apple.dock persistent-apps '<array></array>'
defaults write com.apple.dock persistent-others '<array></array>'
add_app Safari
add_app Utilities/Terminal
add_app Preview
killall Dock

osx::clean-home() {
    local f
    for f in ~/*; do
        if [ -d "$f" ]; then
            local a="$f"
            local xpath=${a%/*}
            local xbase=${a##*/}
            local xfext=${xbase##*.}
            local xpref=${xbase%.*}
            local newbase="`echo ${xbase} | tr '[:upper:]' '[:lower:]'`"
            a="${xpath}/${newbase}"
            if [ "$f" != "$a" ]; then
                sudo mv "$f" "$a"
            fi
        fi
    done
}

[ -d ~/public ] && sudo build symc safe-rm ~/public
[ -d ~/sites ] && sudo build symc safe-rm ~/sites
[ -e ~/downloads ] && sudo build symc safe-rm ~/downloads
sudo ln -s ~/desktop ~/downloads
osx::clean-home
