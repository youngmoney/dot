#!/usr/bin/env bash
bootstrap::location() {                                                                       
    local location="$(cd $(dirname $([ -L "${BASH_SOURCE}" ] && readlink "${BASH_SOURCE}" || echo "${BASH_SOURCE}")) && pwd)"
    if [ -L "${location}" ]; then
        readlink "${location}"                                                            
    else
        echo "${location}"
    fi        
}

DOT="$(cd "$(bootstrap::location)"/.. || exit; pwd -P)"
DOT_DEST=~/local/dot
LOCALDOT=~/.local-dot

mkdir -p ~/.tmp

bootstrap-go() {
    mkdir -p ${LOCALDOT}/{status,conf,commands}

    bootstrap-pullboots && bootstrap-move && bootstrap-dot && bootstrap-install && bootstrap-done
}

bootstrap::is-mac() {
   [ "$(uname -s)" == "Darwin" ]
}

bootstrap-pullboots() {
  if [ ! -d ~/.plugin ] && [ ! -d ~/local/sh-plugin ]; then
      echo installing plugin...
      git clone -q https://github.com/youngmoney/sh-plugin ~/.plugin > /dev/null || return 1
  fi
  if [ -d ~/local/sh-plugin ]; then
      . ~/local/sh-plugin/plugin init
  else
      . ~/.plugin/plugin init
  fi
  plugin install youngmoney/symc
  plugin install youngmoney/dep
  plugin install youngmoney/syncron
  return 0
}

bootstrap-move() {
    mkdir -p "${DOT_DEST}"
    if [ "${DOT_DEST}" != "${DOT}" ]; then
        symc safe-cp "${DOT}" "${DOT_DEST}" || return 1
        DOT="${DOT_DEST}"
    fi
    plugin link "${DOT_DEST}/commands/build" build >/dev/null
    plugin link "${DOT_DEST}/scripts" scripts > /dev/null
    return 0
}

bootstrap-dot() {
    symc link-dir "${DOT}"/conf ~/. || return 1
    syncron install ~/.cron
    bootstrap::is-mac && bash "${DOT}"/conf/osx >/dev/null;
    . ~/.bashrc --short
    return 0
}

bootstrap-install() {
   bootstrap::is-mac && open ${DOT}/conf/taylormint.terminal
   dep install -y
}

bootstrap-done() {
    read -p "make home?[Y/n]" q
    if [ "${q}" == "" ]; then
        touch ${LOCALDOT}/status/home.me
        bootstrap-git
    else
        rm -f ${LOCALDOT}/status/home.me
    fi
    . ~/.bashrc
}


git-prompt() {
    field="$1"
    default="$2"
    default_prompt=""
    [ "${default}" != "" ] && default_prompt=" [${default}]"
    read -p "${field}${default_prompt}: " value
    if [ "${value}" == "" ]; then value="${default}"; fi
    if [ "${value}" == "" ]; then return; fi
    config="${LOCALDOT}/conf/config.git"
    git config --file="${config}" "${field}" "${value}"
}

bootstrap-git() {
    git-prompt user.email git@taylorlmoney.com
    git-prompt github.user
    git-prompt github.token
}


a="$1"
shift;
if [ "${a}" == "go" ]; then
    bootstrap-go "$@"
elif [ "${a}" == "pullboots" ]; then
    bootstrap-pullboots "$@"
elif [ "${a}" == "dot" ]; then
    bootstrap-dot "$@"
elif [ "${a}" == "install" ]; then
    bootstrap-install "$@"
elif [ "${a}" == "git" ]; then
    bootstrap-git "$@"
else
    echo "go: bootstrap everything"
    echo "pullboots: download dependencies"
    echo "dot: symlink dotfiles"
    echo "install: install packages and more"
    echo "git: setup git config"
fi
