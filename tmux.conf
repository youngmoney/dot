# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

bind-key k select-pane -U
bind-key j select-pane -D
bind-key h select-pane -L
bind-key l select-pane -R

bind-key -r < swap-window -t -1
bind-key -r > swap-window -t +1

bind-key -n C-a send-prefix

bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r H resize-pane -L 5
bind-key -r L resize-pane -R 5

#bind-key N new-session -t $(run-shell tmux display -p '#S') -d
# bind-key n run-shell 'TMUX= tmux new-session -t $(tmux display-message -p #S) -s $(tmux display-message -p #S-clone) -d \; switch-client -n \; display-message "session #S cloned"'

bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
set-option -g history-limit 5000

set -g base-index 1
set -g pane-base-index 1

setw -g aggressive-resize on

#set -g set-titles on
#setw -g monitor-activity on

#set -g prefix C-b

set -g default-terminal "screen-256color"
set -gw mode-keys vi
#bind-key S command-prompt -p ssh: "new-window -n %1 'ssh %1'"
bind-key r source-file ~/.tmux.conf
set-option -g default-command "status run -l bash"



bind-key b command-prompt -p todo: "run-shell 'status run build todo %1'"
bind-key B command-prompt -p todo: "run-shell 'status run ~/desktop/hi'"
bind-key E new-window -n 'Create Event' 'status run build gcalcli event'
bind-key e command-prompt -p event: "new-window -n 'Event' 'status run build gcalcli event %1'"
bind-key m command-prompt -p to: "new-window -n 'Mail' '[ \"%1\" != \"\" ] && status run mutt %1'"
bind-key N new-window -n 'Notes' 'status run vim ~/documents/scratch.md "+cd ~/documents"'

set-window-option -g status-left " #S "
set-window-option -g status-left-fg white
set-window-option -g status-left-bg black

set status-interval 3
set-option -g display-time 2000
set -g @resurrect-save 'S'

set-window-option -g clock-mode-style 12
set-window-option -g status-right " %I:%M %d-%b-%y "

# Mail, Reminders, Next Event, Hour
set-window-option -g status-right-length 60
set-window-option -g status-right "#(status run status --color)"
set-window-option -g status-right-fg white
set-window-option -g status-right-bg black

set-window-option -g window-status-format " #I: #W "

set-window-option -g status-bg black
set-window-option -g status-fg green

set-option -g status-attr default

set-window-option -g window-status-current-format " #I: #W "
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg white


run 'if [ ! -d ~/.tmux/plugins/tpm ]; then git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm; fi'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @tpm_plugins '            \
  tmux-plugins/tpm               \
  tmux-plugins/tmux-resurrect    \
  tmux-plugins/tmux-continuum    \
'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-save-bash-history 'off'
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-save-interval '15'
set -g @continuum-restore 'on'
set -g @resurrect-processes 'vi vim nvim emacs man less more tail top htop irssi "~status today" "~status mail"'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
