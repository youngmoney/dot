#!/usr/bin/env python2.7

def confirm(prompt):
    while True:
        try:
            i = input(prompt+" ")
        except KeyboardInterrupt:
            return False
        if i.lower() in ('yes','y', ''): return True
        elif i.lower() in ('no','n'): return False

def prompt(prompt):
    try:
        return input(prompt+" ")
    except KeyboardInterrupt:
        return ""

from todo_list import TodoList
def Run(args):
    tl = lines(args.list)
    if args.verb == 'count':
        tl = TodoList(tl)
        print(tl.count())
    elif args.verb == 'tags':
        tl = TodoList(tl)
        print(tl.tags())
    elif args.verb == 'table':
        tl = TodoList(tl)
        print(tl.table())
    else:
        tl = TodoList(tl)
        print(tl.string())
    return True



from os import path
from os import environ
from glob import glob
def lines(files=None):
    if files is None:
        files = environ.get('LISTS')

    for p in files.split(':'):
        for l in glob(path.expanduser(p)):
            with open(l) as f:
                def yielder():
                    for line in f.readlines():
                        yield line
                yield l, yielder


import argparse, sys
def parseArgs():
    parser = argparse.ArgumentParser("todo")
    parser.add_argument("--debug", action="store_true")
    parser.add_argument("-a", dest="all", action="store_true")
    parser.add_argument('--list')
    parser.add_argument("verb", choices=["list", "count", 'tags', 'table'])

    args = parser.parse_args()
    return args


if __name__ == "__main__":
    if len(sys.argv) == 1: exit()
    try:
        args = parseArgs()
        if not Run(args):
                print("Error")
    except KeyboardInterrupt:
        pass
