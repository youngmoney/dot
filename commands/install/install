#!/usr/bin/env bash

exists() {
    command -v $@ >/dev/null 2>&1
}

error() {
    RED='\033[0;31m'
    NC='\033[0m' # No Color
    echo -e ${RED}${@}${NC}
}

run-quiet() {
    title="$1"
    shift
    echo -n $title...
    err=$( { $@ >/dev/null; } 2>&1) && echo ok || error error
    [ "$err" ] && error "$err"
}

listdiff() {
    comm -23 <(sort "$1") <(sort "$2")
}

restore-all() {
    if [ "$1" != "" ]; then cd $1; fi
    if build system is-mac; then
        [[ "$(type -P gcc)" ]] || xcode-select --install
        restore-brew-tap
        restore-brew
        restore-brew-cask
        restore-safari
        restore-pip2
        restore-pip3
    else
        restore-brew --apt
        restore-pip2 --apt
        restore-pip3 --apt
    fi
    # restore-gem
}

store-all() {
    if [ "$1" != "" ]; then cd $1; fi
    if build system is-mac; then
        store-brew
        store-brew-tap
        store-brew-cask
        store-safari
    fi
    store-pip2
    store-pip3
    # store-gem
}

store-abstract() {
    default_out="$1"
    list_command="$2"
    shift; shift;

    [ "$1" ] && out="$1" || out="$default_out"
    [ "$out" == "-" ] || rm -f "$out"
    while read item; do
        if [ "$out" == "-" ]; then
            echo "$item"
        else
            echo "$item" >> "$out"
        fi
    done < <($list_command)
    [ "$out" == "-" ] || sort -o "$out" "$out"
}

restore-abstract() {
    default_in="$1"
    install="$2"
    shift; shift;

    via=" (via $default_in)"

    [ "$1" ] && in="$1" || in="$default_in"
    listdiff "$in" <(store-$default_in -) | while read item; do
        run-quiet "Installing $item$via" $install "$item"
    done
}

store-brew() {
    [ "$1" ] && out="$1" || out="brew"
    [ "$out" == "-" ] || rm -f "$out"
    while read item; do
        extras="$(brew info $item | \
            /usr/bin/grep 'Built from source with:' | \
            /usr/bin/sed 's/^[ \t]*Built from source with:/ /g; s/\,/ /g')"
        [ "$extras" ] && extras=" $extras"
        if [ "$out" == "-" ]; then
            echo "$item$extras"
        else
            echo "$item$extras" >> "$out"
        fi
    done < <(brew leaves)
    [ "$out" == "-" ] || sort -o "$out" "$out"
}

restore-brew() {
    if [ "$1" != "--apt" ]; then
        [ "$1" ] && in="$1" || in="brew"
        command -v brew >/dev/null || \
         run-quiet "Installing homebrew" ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
        listdiff "$in" <(store-brew -) | while read item; do
            run-quiet "Installing $item (via brew)" brew install "$item"
        done
    else
        shift
        [ "$1" ] && in="$1" || in="brew"
        echo You are using linux! attempting apt-get installs
        run-quiet "Updating apt-get" sudo apt-get update -qq
        patch brew apt.patch -o brew.patched
        listdiff "$in".patched <(list-apt -) | while read item; do
            DEBIAN_FRONTEND=noninteractive
            run-quiet "Installing $item (via apt)" sudo apt-get install -qq $item
        done
        rm -f brew.patched
    fi
}

list-apt() {
    [ "$1" ] && out="$1" || out="apt"
    [ "$out" == "-" ] || rm -f "$out"
    dpkg --get-selections | grep -v deinstall | awk '{print $1}'
}

store-brew-tap() {
    store-abstract brew-tap "brew tap" "$1"
}

restore-brew-tap() {
    command -v brew >/dev/null || \
     run-quiet "Installing homebrew" ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    restore-abstract brew-tap "brew tap" "$1"
}

store-brew-cask() {
    store-abstract brew-cask "brew cask list -1" "$1"
}

restore-brew-cask() {
    restore-abstract brew-cask "brew cask install" "$1"
}

list-python() {
    if python$1 -m pipdeptree -f -w silence >/dev/null 2>&1; then
        python$1 -m pipdeptree -f -w silence 2>/dev/null | grep -v '^ ' | sed 's/==.*//' | sort
        echo pipdeptree
    else
        pip$1 freeze | sed 's/==.*//'
    fi
}

store-pip2() {
    store-abstract pip2 "list-python 2" "$1"
}

restore-pip2() {
    if [ "$1" == "--apt" ]; then
        shift
        exists pip2 || run-quiet "Installing pip2" sudo apt-get -qq install python-pip
        sudo="sudo "
    fi
    restore-abstract pip2 "${sudo}pip2 install" "$1"
}

store-pip3() {
    store-abstract pip3 "list-python 3" "$1"
}

restore-pip3() {
    if [ "$1" == "--apt" ]; then
        shift
        exists pip3 || run-quiet "Installing pip3" sudo apt-get -qq install python3-pip
        sudo="sudo "
    fi
    restore-abstract pip3 "${sudo}pip3 install" "$1"
}

list-gem() {
    gem list |sed 's/(//'|sed 's/)//'|awk '{print $1 " --version=" $2}'
}

store-gem() {
    store-abstract gem "list-gem" "$1"
}

restore-gem() {
    restore-abstract gem "gem install" "$1"
}
#
# store-cron() {
#     crontab -l > cron
# }
#
# restore-cron() {
#     (crontab -l 2>/dev/null; cat cron)| crontab -
# }

store-safari() {
    mkdir -p safari
    rm -rf safari/*
    find ~/library/Safari/Extensions -name '*.safari*' -print0 | xargs -0 -L 1 -n 1 -I % cp % safari
}
install-safari-ext() {
    find "$1" -name '*.safari*' -print0 | xargs -0 -n 1 -L 1 open -a Safari
}
restore-safari() {
    run-quiet "Installing safari extensions" install-safari-ext safari
}

edit-apt() {
    if [ "$1" ]; then cd "$1"; fi
    patch brew apt.patch -o apt.tmp || cp brew apt.tmp
    vim apt.tmp
    diff brew apt.tmp > apt.patch
    rm apt.tmp
}

a="$1"
shift
if [ "$a" == "store" ]; then
    store-all $@
elif [ "$a" == "restore" ]; then
    restore-all $@
elif [[ "$a" == list-* ]]; then
    $a "$@"
elif [[ "$a" == store-* ]]; then
    $a "$@"
elif [[ "$a" == restore-* ]]; then
    $a "$@"
elif [ "$a" == "edit-apt" ]; then
    edit-apt "$@"
elif [ "$a" == "run" ]; then
    run-quiet "$@"
else
    echo "store directory: store all installed packages in directory"
    echo "restore directory: restore from directory"
    echo "list-*: list the top level installs"
    echo "store-*: store individual"
    echo "restore-*: restore individual"
    echo "edit-apt: edit the apt.patch for brew"
    echo "supports: brew (cask/tap, apt), pip2, pip3, gem, safari"
fi
