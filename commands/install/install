#!/usr/bin/env bash

exists() {
    command -v $@ >/dev/null 2>&1
}

restore-all() {
    if [ "$1" != "" ]; then cd $1; fi
    if [ "`build etc is-mac`" != "" ]; then
        "xcode-select --install"
        restore-brew
        restore-brew-cask
        restore-safari
        restore-python
    else
        restore-brew --apt
        restore-python --apt
    fi
    # restore-gem
    # restore-cron
}

store-all() {
    if [ "$1" != "" ]; then cd $1; fi
    if [ "`build etc is-mac`" != "" ]; then
        "xcode-select --install"
        store-brew
        store-brew-cask
        store-safari
    fi
    store-python
    # store-gem
    # store-cron
}

store-brew() {
    echo "" > brew
    brew tap | while read tap; do echo "brew tap $tap" >> brew; done
    brew leaves | while read item; do echo "brew install $item $(brew info $item | /usr/bin/grep 'Built from source with:' | /usr/bin/sed 's/^[ \t]*Built from source with:/ /g; s/\,/ /g')" >> brew; done
    sort -o brew brew
}

restore-brew() {
    if [ "$1" != "--apt" ]; then
        ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
        bash brew
    else
        echo
        echo You are using linux! attempting apt-get installs
        echo
        sudo apt-get update -qq
        patch brew apt.patch -o brew.patched
        cat brew.patched | grep -v 'brew tap' | sed 's/brew install //' | xargs -L 1 -n 1 sudo DEBIAN_FRONTEND=noninteractive apt-get install -qq
        rm -f brew.patched
    fi
}

store-brew-cask() {
    brew cask list -1 > cask
}

restore-brew-cask() {
    while read c; do brew cask install $c; done < cask
}

store-python() {
    list-python 2 > pip
    echo "pipdeptree" >> pip
    if exists python3; then
        list-python 3 > pip3
        echo "pipdeptree" >> pip3
    fi
}

restore-python() {
    if [ "$1" == "--apt" ]; then
        sudo apt-get -qq install python-pip
        sudo apt-get -qq install python3-pip
    fi
    pip install -r pip
    if [ -f pip3 ]; then
        pip3 install -r pip3
    fi
}

store-gem() {
    gem list |sed 's/(//'|sed 's/)//'|awk '{print "gem install " $1 " --version=" $2}' > gem
}

restore-gem() {
    sudo bash gem
}

store-cron() {
    crontab -l > cron
}

restore-cron() {
    (crontab -l 2>/dev/null; cat cron)| crontab -
}

store-safari() {
    mkdir -p safari
    rm -rf safari/*
    find ~/library/Safari/Extensions -name '*.safari*' | xargs -I % cp % safari
}
restore-safari() {
    find safari -name '*.safari*' | xargs open -a Safari
}

list-python() {
    python$1 -m pipdeptree -f -w silence 2>/dev/null | grep -v '^ ' | sort || pip$1 freeze
}

list-python3() { list-python 3; }

edit-apt() {
    if [ "$1" ]; then cd "$1"; fi
    patch brew apt.patch -o apt.tmp
    vim apt.tmp
    diff brew apt.tmp > apt.patch
}

a="$1"
shift
if [ "$a" == "store" ]; then
    store-all $@
elif [ "$a" == "restore" ]; then
    restore-all $@
elif [ "$a" == "list-python" ]; then
    list-python
elif [ "$a" == "list-python3" ]; then
    list-python3
elif [ "$a" == "list-python3" ]; then
    list-python3
elif [ "$a" == "edit-apt" ]; then
    edit-apt "$@"
else
    echo "store directory: store all installed packages in directory"
    echo "restore directory: restore from directory"
    echo "list-python[3]: list the top level installs"
    echo "edit-apt: edit the apt.patch for brew"
fi
