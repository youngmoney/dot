#!/usr/bin/env bash
arg="$1"
shift

[ "$arg" == "--help" ] && echo "this command, try build help" && exit

if command -v realpath >/dev/null 2>&1; then
    SCRIPTS="$(dirname $(realpath "${BASH_SOURCE[0]}" 2>/dev/null))"
elif command -v readlink >/dev/null 2>&1 \
    && readlink --canonicalize-existing ~ >/dev/null 2>&1; then
    SCRIPTS="$(dirname $(readlink --canonicalize-existing ${BASH_SOURCE[0]}))"
else
    SCRIPTS=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd -P)
    if [ "$SCRIPTS" == "${HOME}" ]; then echo "Where am I"; exit 1; fi
fi
buildpathadd() { [[ ":$BUILD_PATH:" != *":$1:"* ]] && export BUILD_PATH="${BUILD_PATH:+"$BUILD_PATH:"}$1"; }


command -v build >/dev/null 2>&1 || pathadd "$SCRIPTS"

buildpathadd $(cd ${SCRIPTS}/..; pwd -P)
buildpathadd ~/.local-dot/commands

_completion()
{
    _script_commands=$(build | tr '\n' ' ')

    local cur prev
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    if [[ $COMP_CWORD -ge 3 ]]; then
        _filedir
    elif [ "${prev}" == "" ] || [ "${prev}" == "build" ]; then
        COMPREPLY=( $(compgen -W "${_script_commands}" -- ${cur}) )
    else
        _script_commands=$(build ${prev} --help | sed 's/[ :].*//' | tr '\n' ' ')
        if [[ "$_script_commands" == usage* ]]; then
            _script_commands=$(build ${prev} --help 2>&1 | grep '{' | sed 's/.*{//g; s/}.*//; s/,/ /g')
        fi
        COMPREPLY=( $(compgen -W "${_script_commands}" -- ${cur}) )
    fi


  return 0
}

if [ "$arg" == "--completion" ]; then
    if [ "$0" = "$BASH_SOURCE" ]; then
        echo "warning, not being sourced"
    fi
    # [ "$2" ] && scriptname="$2" || scriptname="${SCRIPTS}/build"
    if command -v complete >/dev/null 2>&1; then
        complete -o nospace -F _completion build
    fi

    [ "$0" = "$BASH_SOURCE" ] && exit || return
fi

IFS=: read -r -d '' -a path_array < <(printf '%s:\0' "$BUILD_PATH")
for p in "${path_array[@]}"; do
    if [ "$p" != "" ]; then
        commanddir="$p"
        commandsh="$commanddir/$arg/$arg"
        if [ -f "$commandsh" ]; then
            break
        fi

    fi
done

if [ -f "$commandsh" ]; then
    [ "$0" = "$BASH_SOURCE" ] || start="."
    $start "$commandsh" "$@"
else
    # echo "Available Commands"
    for p in "${path_array[@]}"; do
        if [ "$p" != "" ]; then
            commanddir="$p"
            for c in $commanddir/*; do
                # echo
                basename "$c" #| sed 's/^/  /'
                # $c/`basename "$c"` --help  | sed 's/^/    /'
            done
        fi
    done
fi
