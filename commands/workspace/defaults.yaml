locations:
    - name: dot
      change_path_regex: .*
      change_path_command: echo ~/local/dot
      current_path_regex: ~/local/dot.*
      current_path_command: sed 's:.*local/dot:[dot]:'
      layout_name: vim-ctrlp
    - name: local
      change_path_regex: .*
      change_path_command: echo ~/.local-dot
      current_path_regex: ~/.local-dot.*
      current_path_command: sed 's:.*\.local-dot:[local]:'
      layout_name: vim-ctrlp
    - name: notes
      change_path_regex: .*
      change_path_command: '[ -d ~/Documents/notes ] && echo ~/Documents/notes || echo ~/documents/notes'
      current_path_regex: ~/[Dd]ocuments/notes.*
      current_path_command: sed 's:.*ocuments/notes:[notes]:'
      layout_name: vim-ctrlp
layouts:
    - name: vim-ctrlp
      command: vim +CtrlP
commands:
    - name: simple-state
      command: build git state
      path_command: git -C {current_path} rev-parse
    - name: test-clean
    - name: test-one-command
    - name: test-all-command
    - name: test-again
      command: |
        test-workspace-internal() {{
          all_command="$(build workspace command test-all-command)"
          [ "$all_command" == "" ] && all_command="echo no test-all-command found"
          one_command="$(build workspace command test-one-command)"
          [ "$one_command" == "" ] && one_command="echo no test-one-command found"
          command=""
          if [ "$1" == "-a" ]; then
            command="$all_command"
          elif [ "$1" != "" ]; then
            command="$one_command {args}"
          else
            command=$(history | grep "$all_command\|$one_command" | tail -1 | sed -e 's:^ *[0-9]*\*\{{0,1\}} *::')
          fi
          eval "$(build workspace command test-clean)"
          history -s "$command"
          eval "$command"
          local out="$?"
          tput bel
          return $out
        }}
        test-workspace-internal {args}
    - name: log-view
      command: echo; echo "---"; echo "logs above"; return 1
    - name: log-clear
    - name: test-log-loop
      command: |
        while [ "true" ]; do
          echo
          echo "*************************"
          echo
          clear
          sleep 1
          eval "$(build workspace command log-clear)"
          eval "$(build workspace command test-again -- {args})" && return 0
          echo
          sleep 5
          (eval "$(build workspace command log-view)") || read -p "[enter to continue]"
        done


