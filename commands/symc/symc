#!/usr/bin/env bash

symc::readlink() {

    # http://stackoverflow.com/questions/1055671/how-can-i-
    # get-the-behavior-of-gnus-readlink-f-on-a-mac
    local TARGET_FILE="$1"
    cd $(dirname "${TARGET_FILE}") || exit
    TARGET_FILE=$(basename "${TARGET_FILE}")

    # Iterate down a (possible) chain of symlinks
    while [ -L "${TARGET_FILE}" ]
    do
        TARGET_FILE=$(readlink "${TARGET_FILE}")
        if [ -e $(dirname "${TARGET_FILE}") ]; then
            cd $(dirname "${TARGET_FILE}") || exit
        else
            echo "/dev/filedoesnotexist"
            exit 1
        fi
        TARGET_FILE=$(basename "${TARGET_FILE}")
    done

    # Compute the canonicalized name by finding the physical path 
    # for the directory we're in and appending the target file.
    local PHYS_DIR=$(pwd -P)
    local RESULT=${PHYS_DIR}/${TARGET_FILE}
    echo "${RESULT}"
}

symc::create-backup-dir() {
    if [ "${SYMCBACKUPDIR}" == "" ]; then
        SYMCBACKUPDIR=~/backup/$(date +%Y-%m-%d-%H-%M-%S)
        mkdir -p "${SYMCBACKUPDIR}"
    fi
    echo "${SYMCBACKUPDIR}"
}

symc::_backup() {
    symc::create-backup-dir > /dev/null
    mv "$@" "${SYMCBACKUPDIR}"
    symc::is-empty "${SYMCBACKUPDIR}" && rm -rf "${SYMCBACKUPDIR}"
    symc::is-empty ~/backup && rm -rf ~/backup
}

symc::is-empty() {
    [ "$(ls -A "$@" | grep -v .DS_Store)" == "" ] || [ -h "$@" ]
}

symc::safe-rm() {
    if [ -e "$@" ]; then
        if symc::is-empty "$@"; then
            rm -rf "$@"
        else
            symc::_backup "$@"
        fi
    fi
}

symc::safe-mv() {
    if [ -d "$2" ] && symc::is-empty "$2"; then
        rm -rf "$2"
    elif [ -e "$2" ]; then
        symc::_backup "$2"
    fi
    mv "$1" "$2"
}

symc::safe-cp() {
    if [ -d "$2" ] && symc::is-empty "$2"; then
        rm -rf "$2"
    elif [ -e "$2" ]; then
        symc::_backup "$2"
    fi
    cp -r "$1" "$2"
}

symc::safe-link() {
    if [ -d "$2" ] && symc::is-empty "$2"; then
        rm -rf "$2"
    elif [ -e "$2" ] && [ "$1" != $(symc::readlink "$2") ]; then
        symc::_backup "$2"
    else
        rm -rf "$2"
    fi
    ln -s "$1" "$2"

}

symc::clean-link() {
    local dry=""
    if [ "$1" == "--dry" ]; then shift; dry="dry"; fi
    if [ "$1" == "" ]; then 1="./"; fi
    for f in "$1"/{.,}*; do
        local unlinked=$(symc::readlink "${f}")
        if [ ! -e  "${unlinked}" ]; then
            if [ -n "${dry}" ]; then
                echo "${f}"
            else
                rm -rf "${f}"
            fi
        fi
    done
}

symc::abstract-dir() {
    local dircommand="$1"; shift
    local dry=""
    if [ "$1" == "--dry" ]; then shift; dry="dry"; fi
    local dir="$1"
    local dest="$2"
    if [ "${dir}" == "" ] || [ "${dest}" == "" ]; then
        echo "no dir or dest"
        return 1
    fi
    dir=$(cd "${dir}" || exit; pwd -P)
    if [ -n $(echo "${dest}" | sed -n '/\.$/p') ]; then
        local dot="/."
    else
        local dot=""
    fi
    dest=$(cd "${dest}" || exit; pwd -P)
    local f
    for f in "${dir}"/*; do
        local new=$(echo "${f}" | sed -e "s:${dir}:${dest}${dot}:" -e 's://:/:' -e 's:/\./:/.:')
        if [ -n "${dry}" ]; then
            echo "${f}" "${new}"
        else
            ${dircommand} "${f}" "${new}"
        fi
    done
}

symc::link-dir() {
    symc::abstract-dir symc::safe-link "$@"
}

symc::mv-dir() {
    symc::abstract-dir symc::safe-mv "$@"
}

symc::cp-dir() {
    symc::abstract-dir symc::safe-cp "$@"
}

a="$1"
shift

if [ "${a}" == "link-dir" ]; then
    symc::link-dir "$@"
elif [ "${a}" == "mv-dir" ]; then
    symc::mv-dir "$@"
elif [ "${a}" == "cp-dir" ]; then
    symc::cp-dir "$@"
elif [ "${a}" == "safe-rm" ]; then
    symc::safe-rm "$@"
elif [ "${a}" == "safe-mv" ]; then
    symc::safe-mv "$@"
elif [ "${a}" == "safe-cp" ]; then
    symc::safe-cp "$@"
elif [ "${a}" == "safe-link" ]; then
    symc::safe-link "$@"
elif [ "${a}" == "is-empty" ]; then
    symc::is-empty "$@"
elif [ "${a}" == "readlink" ]; then
    symc::readlink "$@"
elif [ "${a}" == "backup-dir" ]; then
    symc::create-backup-dir
elif [ "${a}" == "clean" ]; then
    symc::clean-link "$@"
else
    echo "link-dir [from] [to]: symlink all files in dir (safely) (use \$1/. for dot prefix)"
    echo "mv-dir [from] [to]: move all files in dir (safely) (use \$1/. for dot prefix)"
    echo "cp-dir [from] [to]: copy all files in dir (safely) (use \$1/. for dot prefix)"
    echo "safe-rm: remove a directory (safely)"
    echo "safe-mv: move a file or directory (safely)"
    echo "safe-cp: copy a file or directory (safely)"
    echo "safe-link: link a file or directory (safely)"
    echo "backup-dir: create/echo the backup dir"
    echo "is-empty: bool if directory is empty (except DS_store)"
    echo "readlink: readlink -f simulated"
    echo "clean: remove all dead symlinks in a directory"
fi
