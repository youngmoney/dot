#!/usr/bin/env bash
if command -v realpath >/dev/null 2>&1; then
    SCRIPT=`realpath "${BASH_SOURCE[0]}" 2>/dev/null`
    scriptdir=`dirname "$SCRIPT"`
else
    scriptdir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
fi
PATH=../build:$PATH
LOCALCONF=~/.local-conf

go() {
    mkdir -p ~/.local-conf
    if [ "$1" == "--no" ]; then
        rm -f $LOCALCONF/backup.me
        rm -f $LOCALCONF/sync.me
        rm -f $LOCALCONF/home.me
        no="--no"
    else
        read -p "make home?[Y/n]" q
        if [ "$q" == "" ]; then touch $LOCALCONF/home.me;
        else rm -f $LOCALCONF/home.me; fi
        read -p "allow backups?[Y/n]" q
        if [ "$q" == "" ]; then touch $LOCALCONF/backup.me;
        else rm -f $LOCALCONF/backup.me; fi
        read -p "allow sync?[Y/n]" q
        if [ "$q" == "" ]; then touch $LOCALCONF/sync.me;
        else rm -f $LOCALCONF/sync.me; fi
    fi

    if [ $(uname -s) == "Darwin" ]; then bash $scriptdir/osx; fi

    [ -d $scriptdir/../build ] && setup-dirs || setup-dirs-simple

    export PATH=$PATH:~/local/build

    setup-install $no

    setup-dot
    if [ -d ~/local/archives ] && [ "$no" == "" ]; then
        read -p "restore ssh?[Y/n]" q
        if [ "$q" == "" ]; then build ssh restore ~/local/archives; fi
    fi
    build cron install ~/.cron
    if [ "$no" == "" ]; then
        setup-git
        setup-account
    else
        echo "run setup git"
        echo "run setup account"
    fi
    if [ $(uname -s) == "Darwin" ]; then build mac dud mail; fi
}

safe-rm() {
    if [ -e "$@" ]; then
        if [ "$(ls -A "$@" | grep -v .DS_Store)" ]; then
            file=$(basename "$@")
            sudo mv "$@" ~/desktop/${file}.$(date +%s)
        else
            sudo rm -rf "$@"
        fi
    fi
}

setup-dot() {
    build dot --no-backup -f ~/local/dot
    . ~/.bashrc
    build mail link-mailcap
}

setup-dirs() {
    if [ ~/local/dot != "$scriptdir" ]; then
        cd $scriptdir/../../
        for f in *; do
            if [ -d "$f" ]; then
                safe-rm -rf ~/$f
                sudo mv $f ~/$f
            fi
        done
    fi
}

setup-dirs-simple() {
    mkdir -p ~/local
    if [ ~/local/dot != "$scriptdir" ]; then
        safe-rm ~/local/dot
        mv "$scriptdir" ~/local/dot
        scriptdir=~/local/dot
    fi
    if [ ! -d ~/local/build ]; then
        git clone https://github.com/youngmoney/build.git ~/local/build
    fi
}

setup-install() {
    build install restore $scriptdir/install
    mu index
    echo "The following extras must be installed on their own"
    echo 'gdrsync (setup); peppermint'
    if [ "$1" != "--no" ]; then
        read -p "Run Setups? [yes] " r
        if [ "$r" == "" ]; then
            gdrsync.py ~/desktop test -n
            open $scriptdir/taylormint.terminal
        fi
    else
        echo install gdrsyn and peppermint
    fi
    echo "install xCode as well"
}

setup-account() {
    read -p "Add Account? " q
    while [ "$q" == "" ]; do
        $scriptdir/templates/account.template
        read -p "Add Account? " q
    done
}

setup-git() {
    default_email=git@taylorlmoney.com
    read -p "git email[$default_email]: " email
    if [ "$email" == "" ]; then email="$default_email"; fi
    build template fill --email "$email" $scriptdir/templates/git.bash.template > ~/.local-conf/git.bash
    . ~/.local-conf/git.bash
}


a="$1"
shift;
if [ "$a" == "git" ]; then
    setup-git "$@"
elif [ "$a" == "account" ]; then
    setup-account "$@"
elif [ "$a" == "dot" ]; then
    setup-dot "$@"
elif [ "$a" == "go" ]; then
    go "$@"
elif [ "$a" == "all" ]; then
    go "$@"
elif [ "$a" == "no" ]; then
    go --no "$@"
else
    echo "git: run git setup"
    echo "account: run account setup"
    echo "dot: symlink dotfiles"
    echo "go/all: run everything"
    echo "no: run everything, ask no questions"
fi
