#!/usr/bin/env bash
scriptdir=$(cd $(dirname $([ -L $0 ] && readlink $0 || echo $0)) && pwd)
PATH=../build:$PATH

go() {
    read -p "make home?[Y/n]" q
    if [ "$q" == "" ]; then touch ~/.myhome;
    else rm -f ~/.myhome; fi
    read -p "allow backups?[Y/n]" q
    if [ "$q" != "" ]; then touch ~/.nobackup;
    else rm -f ~/.nobackup; fi
    read -p "allow sync?[Y/n]" q
    if [ "$q" != "" ]; then touch ~/.nosync;
    else rm -f ~/.nosync; fi

    bash $scriptdir/osx

    [ -d $scriptdir/../build ] && setup-dirs || setup-dirs-simple

    export PATH=$PATH:~/local/build
    setup-dot

    setup-install
    if [ -d ~/local/archives ]; then
        read -p "restore ssh?[Y/n]" q
        if [ "$q" == "" ]; then build ssh restore ~/local/archives; fi
    fi
    build cron install ~/.cron
    setup-git
    setup-account
    build mac dud mail
}

safe-rm() {
    if [ -e "$@" ]; then
        if [ "$(ls -A "$@" | grep -v .DS_Store)" ]; then
            file=$(basename "$@")
            sudo mv "$@" ~/desktop/${file}.$(date +%s)
        else
            sudo rm -rf "$@"
        fi
    fi
}

setup-dot() {
    build dot --no-backup -f ~/local/scripts
    touch ~/.my_home
    source ~/.bashrc
    build mail link-mailcap
}

setup-dirs() {
    if [ ~/local/scripts != "$scriptdir" ]; then
        cd $scriptdir/../../
        for f in *; do
            if [ -d "$f" ]; then
                safe-rm -rf ~/$f
                sudo mv $f ~/$f
            fi
        done
    fi
}

setup-dirs-simple() {
    mkdir -p ~/local
    if [ ~/local/scripts != "$scriptdir" ]; then
        safe-rm ~/local/scripts
        mv "$scriptdir" ~/local/scripts
    fi
    if [ ! -d ~/local/build ]; then
        git clone git@github.com:youngmoney/build ~/local/build
    fi
}

setup-install() {
    build install restore $scriptdir/install
    mu index
    echo "The following extras must be installed on their own"
    echo 'gdrsync (setup); peppermint'
    read -p "Run Setups? [yes] " r
    if [ "$r" == "" ]; then
        gdrsync.py ~/desktop test -n
        open $scriptdir/taylormint.terminal
    fi
    echo "install xCode as well"
}

setup-account() {
    read -p "Add Account? " q
    while [ "$q" == "" ]; do
        $scriptdir/template/account.template
        read -p "Add Account? " q
    done
}

setup-git() {
    default_email=git@taylorlmoney.com
    read -p "git email[$default_email]: " email
    if [ "$email" == "" ]; then email="$default_email"; fi
    build template fill --email "$email" $scriptdir/template/git.bash.template > ~/.secret/git.bash
    source ~/.secret/git.bash
}


a="$1"
shift;
if [ "$a" == "git" ]; then
    setup-git "$@"
elif [ "$a" == "account" ]; then
    setup-account "$@"
elif [ "$a" == "dot" ]; then
    setup-dot "$@"
else
    go
fi
